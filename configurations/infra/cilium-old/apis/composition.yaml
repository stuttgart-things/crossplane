---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  labels:
    crossplane.io/xrd: xciliums.resources.stuttgart-things.com
  name: cilium
spec:
  compositeTypeRef:
    apiVersion: resources.stuttgart-things.com/v1alpha1
    kind: XCilium
  mode: Pipeline
  pipeline:
  - functionRef:
      name: function-patch-and-transform
    input:
      apiVersion: pt.fn.crossplane.io/v1beta1
      kind: Resources
      resources:
      - base:
          apiVersion: helm.crossplane.io/v1beta1
          kind: Release
          metadata:
            annotations:
              crossplane.io/external-name: cilium
            name: cilium
          spec:
            forProvider:
              chart:
                name: cilium
                repository: https://helm.cilium.io
              insecureSkipTLSVerify: false
              namespace: cilium-system
              skipCRDs: false
              skipCreateNamespace: false
              wait: true
              values: {}
            providerConfigRef:
              name: in-cluster
        connectionDetails:
        - fromConnectionSecretKey: config # pragma: allowlist secret
          name: config
          type: FromConnectionSecretKey
        name: cilium-release
        patches:
        - combine:
            strategy: string
            string:
              fmt: cilium-%s
            variables:
            - fromFieldPath: spec.clusterName
          toFieldPath: metadata.name
          type: CombineFromComposite
        - fromFieldPath: spec.deploymentNamespace
          toFieldPath: spec.forProvider.namespace
          type: FromCompositeFieldPath
        - fromFieldPath: spec.clusterName
          toFieldPath: spec.providerConfigRef.name
          type: FromCompositeFieldPath
        - fromFieldPath: spec.version
          toFieldPath: spec.forProvider.chart.version
          type: FromCompositeFieldPath
        # Patches for Helm values
        - fromFieldPath: spec.values.kubeProxyReplacement
          toFieldPath: spec.forProvider.values.kubeProxyReplacement
          type: FromCompositeFieldPath
        - fromFieldPath: spec.values.routingMode
          toFieldPath: spec.forProvider.values.routingMode
          type: FromCompositeFieldPath
        - fromFieldPath: spec.values.ipv4NativeRoutingCIDR
          toFieldPath: spec.forProvider.values.ipv4NativeRoutingCIDR
          type: FromCompositeFieldPath
        - fromFieldPath: spec.values.k8sServiceHost
          toFieldPath: spec.forProvider.values.k8sServiceHost
          type: FromCompositeFieldPath
        - fromFieldPath: spec.values.k8sServicePort
          toFieldPath: spec.forProvider.values.k8sServicePort
          type: FromCompositeFieldPath
        - fromFieldPath: spec.values.l2announcements.enabled
          toFieldPath: spec.forProvider.values.l2announcements.enabled
          type: FromCompositeFieldPath
        - fromFieldPath: spec.values.l2announcements.leaseDuration
          toFieldPath: spec.forProvider.values.l2announcements.leaseDuration
          type: FromCompositeFieldPath
        - fromFieldPath: spec.values.l2announcements.leaseRenewDeadline
          toFieldPath: spec.forProvider.values.l2announcements.leaseRenewDeadline
          type: FromCompositeFieldPath
        - fromFieldPath: spec.values.l2announcements.leaseRetryPeriod
          toFieldPath: spec.forProvider.values.l2announcements.leaseRetryPeriod
          type: FromCompositeFieldPath
        - fromFieldPath: spec.values.devices
          toFieldPath: spec.forProvider.values.devices
          type: FromCompositeFieldPath
        - fromFieldPath: spec.values.externalIPs.enabled
          toFieldPath: spec.forProvider.values.externalIPs.enabled
          type: FromCompositeFieldPath
        - fromFieldPath: spec.values.autoDirectNodeRoutes
          toFieldPath: spec.forProvider.values.autoDirectNodeRoutes
          type: FromCompositeFieldPath
        - fromFieldPath: spec.values.operator.replicas
          toFieldPath: spec.forProvider.values.operator.replicas
          type: FromCompositeFieldPath
    step: patch-and-transform
  writeConnectionSecretsToNamespace: crossplane-system # pragma: allowlist secret