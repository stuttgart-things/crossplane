---
apiVersion: apps.stuttgart-things.com/v1alpha1
kind: VCluster
metadata:
  name: prod-vcluster
  namespace: production
spec:
  # Production VCluster Configuration
  name: prod-vcluster
  version: "0.29.0"
  clusterName: prod-k8s-cluster
  targetNamespace: vcluster-prod
  
  # Production-grade settings
  storageClass: fast-ssd
  bindAddress: "0.0.0.0"
  proxyPort: 8443
  nodePort: 30443
  extraSANs:
    - vcluster.prod.example.com
    - vcluster-internal.prod.local
    - 10.0.100.50
    - localhost
  serverUrl: https://vcluster.prod.example.com:30443
  
  # Production-grade additional secrets
  additionalSecrets:
    - name: vc-prod-vcluster-ops
      namespace: vcluster-prod
      context: prod-vcluster-ops
      server: https://vcluster.prod.example.com:30443
    - name: vc-prod-vcluster-monitoring
      namespace: monitoring
      context: prod-vcluster-monitoring
      server: https://vcluster.prod.example.com:30443
  
  # Production Helm values
  values:
    controlPlane:
      distro:
        k8s:
          enabled: true
          version: "1.29"
      statefulSet:
        persistence:
          size: 50Gi
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
      service:
        type: NodePort
    etcd:
      replicas: 3
    networking:
      replicateService:
        services:
          - fromNamespace: kube-system
          - fromNamespace: monitoring
    rbac:
      clusterRole:
        create: true
    telemetry:
      disabled: false
  
  # Connection Secret Configuration
  connectionSecret:
    enabled: true
    name: prod-vcluster-connection
    namespace: crossplane-system
    vclusterSecretName: vc-prod-vcluster
    vclusterSecretNamespace: vcluster-prod

  # Output kubeconfig to production namespace for ops team
  writeConnectionSecretToRef:
    name: prod-vcluster-kubeconfig
    namespace: production