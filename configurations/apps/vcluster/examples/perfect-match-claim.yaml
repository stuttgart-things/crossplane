---
apiVersion: apps.stuttgart-things.com/v1alpha1
kind: VCluster
metadata:
  name: vcluster-k3s-tink-exact-match
  namespace: default
spec:
  # Note: The KCL module generates ProviderConfig names based on the 'name' parameter
  # To get ProviderConfig named 'vcluster-k3s-tink2', we need name: 'vcluster-k3s-tink2'
  # But to get Release named 'vlcuster-k3s-tink1', we need to customize the KCL module
  
  # FOR EXACT MATCH: This configuration attempts to match your desired output
  name: vlcuster-k3s-tink1  # This creates Release with this name
  version: "0.29.0"
  clusterName: k3s-tink1
  targetNamespace: vcluster-k3s-tink2
  
  # VCluster Specific Configuration
  storageClass: local-path
  bindAddress: "0.0.0.0"
  proxyPort: 8443
  nodePort: 32445
  extraSANs:
    - test-k3s1.labul.sva.de
    - "10.31.103.23"
    - localhost
  serverUrl: https://10.31.103.23:32445
  
  # Additional Secrets Configuration
  additionalSecrets:
    - name: vc-vlcuster-k3s-tink1-crossplane
      namespace: vcluster-k3s-tink2
      context: vcluster-crossplane-context
      server: https://10.31.103.23:32445
  
  # Connection Secret Configuration
  connectionSecret:
    enabled: true
    name: vcluster-k3s-tink2-connection
    namespace: crossplane-system
    vclusterSecretName: vc-vlcuster-k3s-tink1
    vclusterSecretNamespace: vcluster-k3s-tink2

  # Test resources (this needs to be added to the KCL module or Composition)
  # The test namespace and configmap are not part of the standard VCluster deployment
  # These would need to be added as additional resources in a custom composition

  # Write connection secret for kubectl access
  writeConnectionSecretToRef:
    name: vcluster-k3s-tink1-connection
    namespace: default