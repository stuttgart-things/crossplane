---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: postgresserver
spec:
  compositeTypeRef:
    apiVersion: resources.stuttgart-things.com/v1alpha1
    kind: XPostgresServer
  mode: Pipeline
  pipeline:
    - step: deploy-postgres-server
      functionRef:
        name: function-go-templating
      input:
        apiVersion: gotemplating.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        inline:
          template: | # pragma: allowlist secret
            apiVersion: helm.crossplane.io/v1beta1
            kind: Release
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: server
                gotemplating.fn.crossplane.io/ready: "True"
              name: postgresserver-{{ .observed.composite.resource.spec.clusterName }}
            spec:
              providerConfigRef:
                name: {{ .observed.composite.resource.spec.clusterName }}
              forProvider:
                chart:
                  name: postgresql
                  repository: oci://registry-1.docker.io/bitnamicharts/
                  version: {{ .observed.composite.resource.spec.version }}
                insecureSkipTLSVerify: true
                namespace: {{ .observed.composite.resource.spec.deploymentNamespace }}
                skipCRDs: false
                skipCreateNamespace: false
                wait: true
                #values:
              connectionDetails:
                - apiVersion: v1
                  kind: Service
                  name: postgresserver-{{ .observed.composite.resource.spec.clusterName }}-postgresql
                  namespace: {{ .observed.composite.resource.spec.deploymentNamespace }}
                  fieldPath: spec.clusterIP
                  toConnectionSecretKey: ip
                - apiVersion: v1
                  kind: Service
                  name: postgresserver-{{ .observed.composite.resource.spec.clusterName }}-postgresql-hl
                  namespace: {{ .observed.composite.resource.spec.deploymentNamespace }}
                  fieldPath: metadata.name
                  toConnectionSecretKey: hostname-hl
                - apiVersion: v1
                  kind: Service
                  name: postgresserver-{{ .observed.composite.resource.spec.clusterName }}-postgresql
                  namespace: {{ .observed.composite.resource.spec.deploymentNamespace }}
                  fieldPath: metadata.name
                  toConnectionSecretKey: hostname
                - apiVersion: v1
                  kind: Secret
                  name: postgresserver-{{ .observed.composite.resource.spec.clusterName }}-postgresql
                  namespace: {{ .observed.composite.resource.spec.deploymentNamespace }}
                  fieldPath: data.postgres-password
                  toConnectionSecretKey: password
              writeConnectionSecretToRef:
                name: postgresserver-{{ .observed.composite.resource.metadata.name }}-credentials
                namespace: crossplane-system
